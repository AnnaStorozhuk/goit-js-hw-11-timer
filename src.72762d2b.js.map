{"version":3,"sources":["plugin.js","index.js"],"names":["CountdownTimer","constructor","selector","targetDate","refs","daysElem","document","querySelector","hoursElem","minsElem","secsElem","run","changeDate","time","getTime","Date","calculateTime","viewError","days","Math","floor","hours","mins","secs","changeElems","innerHTML","setInterval"],"mappings":";;;AAA4B,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,oBAAA,EAArB,MAAMA,EACXC,aAAY,SAAEC,EAAF,WAAYC,IACjBD,KAAAA,SAAWA,EACXC,KAAAA,WAAaA,EAEbC,KAAAA,KAAO,CACVC,SAAUC,SAASC,iBACd,KAAKL,oCAEVM,UAAWF,SAASC,iBACf,KAAKL,qCAEVO,SAAUH,SAASC,iBACd,KAAKL,oCAEVQ,SAAUJ,SAASC,iBACd,KAAKL,qCAIPS,KAAAA,MAEPC,aACQC,MAAAA,EAAO,KAAKV,WAAWW,WAAY,IAAIC,MAAOD,UACpDD,EAAO,EAAI,KAAKG,cAAcH,GAAQ,KAAKI,YAE7CD,cAAcH,GACNK,MAAAA,EAAOC,KAAKC,MAAMP,EAAQ,OAC1BQ,EAAQF,KAAKC,MAAOP,EAAQ,MAAyB,MACrDS,EAAOH,KAAKC,MAAOP,EAAQ,KAAoB,KAC/CU,EAAOJ,KAAKC,MAAOP,EAAQ,IAAc,KAC1CW,KAAAA,YAAYN,EAAMG,EAAOC,EAAMC,GAEtCC,YAAYN,EAAMG,EAAOC,EAAMC,GACxBnB,KAAAA,KAAKC,SAASoB,UAAYP,EAC1Bd,KAAAA,KAAKI,UAAUiB,UAAYJ,EAC3BjB,KAAAA,KAAKK,SAASgB,UAAYH,EAC1BlB,KAAAA,KAAKM,SAASe,UAAYF,EAEjCZ,MACOC,KAAAA,aACLc,YAAY,KACLd,KAAAA,cACJ,KAELK,YACEX,SAASC,cAAc,KAAKL,UAAUuB,UAAY,iBA9C1B,QAAA,eAAA;;ACG5B,aAHA,QAAA,eACA,IAAA,EAAA,QAAA,YAEA,IAAIzB,EAAJ,eAAmB,CACjBE,SAAU,WACVC,WAAY,IAAIY,KAAK","file":"src.72762d2b.js","sourceRoot":"../src","sourcesContent":["export class CountdownTimer {\n  constructor({ selector, targetDate }) {\n    this.selector = selector;\n    this.targetDate = targetDate;\n\n    this.refs = {\n      daysElem: document.querySelector(\n        `${this.selector} span[data-value=\"days\"]`,\n      ),\n      hoursElem: document.querySelector(\n        `${this.selector} span[data-value=\"hours\"]`,\n      ),\n      minsElem: document.querySelector(\n        `${this.selector} span[data-value=\"mins\"]`,\n      ),\n      secsElem: document.querySelector(\n        `${this.selector} span[data-value=\"secs\"]`,\n      ),\n    };\n\n    this.run();\n  }\n  changeDate() {\n    const time = this.targetDate.getTime() - new Date().getTime();\n    time > 0 ? this.calculateTime(time) : this.viewError();\n  }\n  calculateTime(time) {\n    const days = Math.floor(time / (1000 * 60 * 60 * 24));\n    const hours = Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n    const mins = Math.floor((time % (1000 * 60 * 60)) / (1000 * 60));\n    const secs = Math.floor((time % (1000 * 60)) / 1000);\n    this.changeElems(days, hours, mins, secs);\n  }\n  changeElems(days, hours, mins, secs) {\n    this.refs.daysElem.innerHTML = days;\n    this.refs.hoursElem.innerHTML = hours;\n    this.refs.minsElem.innerHTML = mins;\n    this.refs.secsElem.innerHTML = secs;\n  }\n  run() {\n    this.changeDate();\n    setInterval(() => {\n      this.changeDate();\n    }, 1000);\n  }\n  viewError() {\n    document.querySelector(this.selector).innerHTML = 'Timer is over';\n  }\n}","import './style.css';\nimport { CountdownTimer } from './plugin';\n\nnew CountdownTimer({\n  selector: '#timer-1',\n  targetDate: new Date('Dec 31, 2021'),\n});\n\n"]}